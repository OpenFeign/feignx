/*
 * Copyright 2019 OpenFeign Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package feign.assertions;

import feign.http.HttpResponse;

/**
 * {@link HttpResponse} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractHttpResponseAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class HttpResponseAssert extends AbstractHttpResponseAssert<HttpResponseAssert, HttpResponse> {

  /**
   * Creates a new <code>{@link HttpResponseAssert}</code> to make assertions on actual HttpResponse.
   * @param actual the HttpResponse we want to make assertions on.
   */
  public HttpResponseAssert(HttpResponse actual) {
    super(actual, HttpResponseAssert.class);
  }

  /**
   * An entry point for HttpResponseAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myHttpResponse)</code> and get specific assertion with code completion.
   * @param actual the HttpResponse we want to make assertions on.
   * @return a new <code>{@link HttpResponseAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static HttpResponseAssert assertThat(HttpResponse actual) {
    return new HttpResponseAssert(actual);
  }
}
